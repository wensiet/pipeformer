stages:
  - build
  - validate-config
  - provision
  - post-scripts

variables:
  IMAGE_NAME: "registry.gitlab.com/pipeform/pipeformer"

build-on-code-change:
  stage: build
  image: docker:dind
  services:
    - docker:dind
  only:
    changes:
      - src/**/*
      - pyproject.toml
      - poetry.lock
      - Dockerfile
      - .gitlab-ci.yml
    refs:
      - main
  script:
    - docker info
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - export VERSION_TAG=$(if [ "$CI_COMMIT_TAG" != "" ]; then echo "$CI_COMMIT_TAG"; else echo "$CI_COMMIT_REF_NAME-${CI_COMMIT_SHORT_SHA}"; fi)
    - docker build -t $IMAGE_NAME:$VERSION_TAG -t $IMAGE_NAME:latest .
    - docker push $IMAGE_NAME:$VERSION_TAG
    - docker push $IMAGE_NAME:latest

validate-compute-configuration:
  image: $IMAGE_NAME:latest
  stage: validate-config
  only:
    changes:
      - compute/**/*
  before_script:
    - source ./find_changed_config.sh
  script:
    - validate -f $file_name -c $change_type


provision-compute-instance:
  image: python:3.12
  stage: provision
  only:
    changes:
      - compute/**/*
    refs:
      - main
  before_script:
    - pip install --upgrade pip
    - pip install poetry
    - poetry install -v
    - source ./find_changed_config.sh
  script:
    - poetry run python cli.py provision -f $file_name -c $change_type

apply-compute-post-scripts:
  image: python:3.12
  stage: post-scripts
  only:
    changes:
      - compute/**/*
    refs:
      - main
  script:
    - echo "Ded, apply compute post scripts"
